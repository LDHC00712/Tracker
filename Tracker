-- // ✅ CONFIG ==============================
local CONFIG = {
    WebhookURL = "https://30256a970d1f.ngrok-free.app/track", -- แก้ URL webhook ที่นี่
    UpdateInterval = 60, -- หน่วยเป็นวินาที (ส่งข้อมูลทุก 60 วิ)
    FarmInterval = 600, -- เช็คสถานะ farm ทุก 10 นาที (600 วิ)
    FarmThreshold = 10000, -- เงินเพิ่มขั้นต่ำในช่วง FarmInterval เพื่อถือว่า "✅"
}
-- // =======================================

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalPlayer = Players.LocalPlayer

local function getCash()
    local cash = 0
    pcall(function()
        local df = LocalPlayer:WaitForChild("DataFolder", 10)
        local currency = df:WaitForChild("Currency", 10)
        cash = currency.Value
    end)
    return cash
end

-- รีเซ็ตเงินเริ่มต้นทุกครั้งที่โหลดสคริปต์ใหม่
local initialCash = getCash()
local cash10MinAgo = initialCash
local last10Min = os.time()
local farmStatus = "❌" -- เก็บสถานะฟาร์มของรอบ 10 นาทีล่าสุด

local altName = LocalPlayer.Name
local gameName = "Unknown"
pcall(function()
    gameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
end)

local function checkFarmStatus()
    local currentCash = getCash()
    local gain10Min = currentCash - cash10MinAgo
    if gain10Min >= CONFIG.FarmThreshold then
        farmStatus = "✅"
    else
        farmStatus = "❌"
    end
    -- รีเซ็ตฐานการนับรอบถัดไป
    cash10MinAgo = currentCash
    last10Min = os.time()
end

local function sendUpdate()
    local currentCash = getCash()
    local now = os.time()

    -- เช็คและอัปเดต farmStatus ทุก FarmInterval วิ
    if now - last10Min >= CONFIG.FarmInterval then
        checkFarmStatus()
    end

    local earnedCash = currentCash - initialCash -- เงินฟาร์ม คำนวณจากฐาน initialCash

    local data = {
        name = altName,
        game = gameName,
        currentCash = currentCash,
        initialCash = initialCash,  -- ส่ง initialCash เพื่อรีเซ็ตฝั่ง server
        earnedCash = earnedCash,
        timestamp = os.date("%Y-%m-%d %H:%M:%S"),
        farm = farmStatus
    }

    local jsonData = HttpService:JSONEncode(data)

    local success, err = pcall(function()
        if request then
            request({
                Url = CONFIG.WebhookURL,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = jsonData
            })
        else
            HttpService:PostAsync(CONFIG.WebhookURL, jsonData, Enum.HttpContentType.ApplicationJson)
        end
    end)

    if success then
        print("[AltTracker] ✅ Update sent successfully!")
    else
        warn("[AltTracker] ❌ Failed to send update:", err)
    end
end

-- ส่งข้อมูลตอนเริ่มสคริปต์ (รีเซ็ตค่าเริ่มต้น)
sendUpdate()

-- ส่งข้อมูลซ้ำทุก UpdateInterval วิ (ไม่มี log)
task.spawn(function()
    while true do
        task.wait(CONFIG.UpdateInterval)
        sendUpdate()
    end
end)
