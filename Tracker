-- // ✅ CONFIG ==============================
local CONFIG = {
    WebhookURL = "https://08cb8c04f339.ngrok-free.app/track", -- แก้ URL webhook ที่นี่
    UpdateInterval = 60, -- หน่วยเป็นวินาที (ส่งข้อมูลทุก 60 วิ)
    FarmInterval = 600, -- เช็คสถานะ farm ทุก 10 นาที (600 วิ)
    FarmThreshold = 10000, -- เงินเพิ่มขั้นต่ำในช่วง FarmInterval เพื่อถือว่า "✅"
}
-- // =======================================

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalPlayer = Players.LocalPlayer

local function getCash()
    local cash = 0
    pcall(function()
        local df = LocalPlayer:WaitForChild("DataFolder", 10)
        local currency = df:WaitForChild("Currency", 10)
        cash = currency.Value
    end)
    return cash
end

-- รีเซ็ตเงินเริ่มต้นทุกครั้งที่โหลดสคริปต์ใหม่
local initialCash = getCash()
local cash10MinAgo = initialCash
local last10Min = os.time()

local altName = LocalPlayer.Name
local gameName = "Unknown"
pcall(function()
    gameName = MarketplaceService:GetProductInfo(game.PlaceId).Name
end)

local function sendUpdate()
    local currentCash = getCash()
    local now = os.time()

    -- อัปเดตเงินเก่า cash10MinAgo ทุก FarmInterval วิ
    if now - last10Min >= CONFIG.FarmInterval then
        cash10MinAgo = currentCash
        last10Min = now
    end

    local earnedCash = currentCash - initialCash -- เงินฟาร์ม คำนวณใหม่ทุกครั้งจากฐาน initialCash
    local gain10Min = currentCash - cash10MinAgo
    local farmStatus = (gain10Min >= CONFIG.FarmThreshold) and "✅" or "❌"

    local data = {
        name = altName,
        game = gameName,
        currentCash = currentCash,
        initialCash = initialCash,
        earnedCash = earnedCash,
        timestamp = os.date("%Y-%m-%d %H:%M:%S"),
        farm = farmStatus
    }

    local jsonData = HttpService:JSONEncode(data)

    local success, err = pcall(function()
        if request then
            request({
                Url = CONFIG.WebhookURL,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = jsonData
            })
        else
            HttpService:PostAsync(CONFIG.WebhookURL, jsonData, Enum.HttpContentType.ApplicationJson)
        end
    end)

-- ส่งข้อมูลตอนเริ่มสคริปต์
sendUpdate()

-- ส่งข้อมูลซ้ำทุก UpdateInterval วิ
task.spawn(function()
    while true do
        task.wait(CONFIG.UpdateInterval)
        sendUpdate()
    end
end)
